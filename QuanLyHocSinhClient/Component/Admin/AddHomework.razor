
@page "/addHomework"
@inject ISnackbar Snackbar
@inject GoogleDriveServices GoogleDriveServices
@if (Program.Teacher != null)
{
    <h3>AddHomework</h3>

    <MudGrid Class="mt-4">
        <MudTextField Label="Tiêu đề" @bind-Value="@homework.Title" Variant="Variant.Text"></MudTextField>
    </MudGrid>
    <MudGrid Class="mt-4">
        <MudTextField T="string" Label="Nội dung" Variant="Variant.Text" @bind-Value="homework.Content" Lines="5" />
    </MudGrid>
    <MudGrid>
        <MudItem xs="10">
            <DriveUpload Id="@homework.Id" @ref="_driveUpload" Classify="UploadClassify.DocumentData"></DriveUpload>
        </MudItem>
        <MudItem xs="2" Class="d-flex flex-row-reverse">
            <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Send" Color="Color.Primary" OnClick="HandleSubmit">Gửi</MudButton>
        </MudItem>
    </MudGrid>
}
else
{
    <p>Không có quyền truy cập!</p>
}



@code {
    Homework homework = new Homework();
    Teacher teacher = new Teacher();
    DriveUpload _driveUpload;
    IList<IBrowserFile> files = new List<IBrowserFile>();
    private void UploadFiles(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            files.Add(file);
        }
        //TODO upload the files to the server
    }
    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        teacher = Program.Teacher;
        await GoogleDriveServices.PrepareFolderId(homework.Id, UploadClassify.DocumentData);


    }
    public async Task HandleSubmit()
    {
        if (_driveUpload.IsUpload)
        {
            homework.Image = "";
            await _driveUpload.UploadAsync();
            if (_driveUpload.IsUploadComplete) // check upload error: true when upload success; false when upload failed
            {
                foreach (var item in _driveUpload.ResultPath)
                {
                    homework.Image += item + "|";
                }
            }
            else
                return;
        }
        homework.TeacherId = teacher.Id;
        homework.CreateAt = DateTime.Now;


        homework  = await  API<Homework>.Instance.PostAsync("/api/Homework", homework);

        homework = new Homework();
        Snackbar.Add("Lưu thành công");
    }
}
