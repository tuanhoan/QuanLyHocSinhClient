
@page "/addHomework"
@inject ISnackbar Snackbar
@if (Program.Teacher != null)
{
    <h3>Thêm bài tập</h3>

    <MudGrid Class="mt-4">
        <MudTextField Label="Tiêu đề" @bind-Value="@homework.Title" Variant="Variant.Text"></MudTextField>
    </MudGrid>
    <MudGrid Class="mt-4">
        <MudTextField T="string" Label="Nội dung" Variant="Variant.Text" @bind-Value="homework.Content" Lines="5" />
    </MudGrid>
    <MudGrid Class="mt-4">
        <MudCard Style="width:100%">
            <MudCardActions>
                <InputFile id="fileInput" OnChange="UploadFiles" hidden multiple />
                <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Secondary" for="fileInput">Thêm ảnh</MudButton>
            </MudCardActions>
            <MudCardMedia Image="@homework.Image"></MudCardMedia>
        </MudCard>

    </MudGrid>
    <MudGrid Class="mt-4">
        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Info" Size="Size.Small" OnClick="@OnValidSubmit">Save</MudButton>
    </MudGrid>  }
            else
            {
                <p>Không có quyền truy cập!</p>
            }



@code {
    Homework homework = new Homework();
    Teacher teacher = new Teacher();
    IList<IBrowserFile> files = new List<IBrowserFile>();
    private void UploadFiles(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            files.Add(file);
        }
        //TODO upload the files to the server
    }
    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        teacher = Program.Teacher;


    }
    private async void OnValidSubmit()
    {
        homework.TeacherId = teacher.Id;
        homework.CreateAt = DateTime.Now;
        await API<Homework>.Instance.PostAsync("/api/Homework", homework);
        Snackbar.Add("Lưu thành công");
    }
}
